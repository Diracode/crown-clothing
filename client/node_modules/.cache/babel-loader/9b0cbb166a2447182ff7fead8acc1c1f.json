{"ast":null,"code":"import { takeEvery, call, put } from 'redux-saga/effects';\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\nimport { fetchCollectionsSuccess, fetchCollectionsFailure } from './shop.actions';\nimport ShopActionTypes from './shop.types';\nexport function* fetchcollectionAsync() {\n  try {\n    const collectionRef = firestore.collection('collections');\n    const snapshot = yield collectionRef.get();\n    const collectionsMap = yield call(convertCollectionsSnapshotToMap, snapshot);\n    yield put(fetchCollectionsSuccess(collectionsMap));\n  } catch {\n    yield put(fetchCollectionsFailure(error.message));\n  }\n}\nexport function* fetchcollectionStart() {\n  yield takeEvery(ShopActionTypes.FETCH_COLLECTIONS_START, fetchcollectionAsync);\n}","map":{"version":3,"sources":["/Users/user/Desktop/workspace/deca-frontend/crown-clothing/src/redux/shop/shop.sagas.js"],"names":["takeEvery","call","put","firestore","convertCollectionsSnapshotToMap","fetchCollectionsSuccess","fetchCollectionsFailure","ShopActionTypes","fetchcollectionAsync","collectionRef","collection","snapshot","get","collectionsMap","error","message","fetchcollectionStart","FETCH_COLLECTIONS_START"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,IAApB,EAA0BC,GAA1B,QAAqC,oBAArC;AAEA,SAASC,SAAT,EAAoBC,+BAApB,QAA2D,+BAA3D;AAEA,SACIC,uBADJ,EAEIC,uBAFJ,QAGO,gBAHP;AAKA,OAAOC,eAAP,MAA4B,cAA5B;AAEA,OAAO,UAAUC,oBAAV,GAAiC;AAEpC,MAAG;AACC,UAAMC,aAAa,GAAGN,SAAS,CAACO,UAAV,CAAqB,aAArB,CAAtB;AACA,UAAMC,QAAQ,GAAG,MAAMF,aAAa,CAACG,GAAd,EAAvB;AACA,UAAMC,cAAc,GAAG,MAAMZ,IAAI,CAACG,+BAAD,EAAkCO,QAAlC,CAAjC;AAEA,UAAMT,GAAG,CAACG,uBAAuB,CAACQ,cAAD,CAAxB,CAAT;AACH,GAND,CAME,MAAM;AACJ,UAAMX,GAAG,CAACI,uBAAuB,CAACQ,KAAK,CAACC,OAAP,CAAxB,CAAT;AACH;AACJ;AAED,OAAO,UAAUC,oBAAV,GAAiC;AACpC,QAAMhB,SAAS,CACXO,eAAe,CAACU,uBADL,EAEXT,oBAFW,CAAf;AAIH","sourcesContent":["import { takeEvery, call, put } from 'redux-saga/effects';\n\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\n\nimport {\n    fetchCollectionsSuccess,\n    fetchCollectionsFailure\n} from './shop.actions';\n\nimport ShopActionTypes from './shop.types';\n\nexport function* fetchcollectionAsync() {\n\n    try{\n        const collectionRef = firestore.collection('collections');\n        const snapshot = yield collectionRef.get();\n        const collectionsMap = yield call(convertCollectionsSnapshotToMap, snapshot);\n        \n        yield put(fetchCollectionsSuccess(collectionsMap));\n    } catch {\n        yield put(fetchCollectionsFailure(error.message));\n    }\n}\n\nexport function* fetchcollectionStart() {\n    yield takeEvery(\n        ShopActionTypes.FETCH_COLLECTIONS_START,\n        fetchcollectionAsync\n    );\n}"]},"metadata":{},"sourceType":"module"}