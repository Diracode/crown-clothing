{"ast":null,"code":"import { takeLatest, put, all, call } from 'redux-saga/effects';\nimport UserActionTypes from './user.types';\nimport { auth, googleProvider, createUserProfileDocument, getCurrentUser } from '../../firebase/firebase.utils';\nimport { signInSuccess, signInFailure, signOutSuccess, signOutFailure, signUpSuccess, signUpFailure } from './user.actions';\nexport function* getSnapshotFromUserAuth(userAuth, addi) {\n  try {\n    const userRef = yield call(createUserProfileDocument, userAuth);\n    const userSnapshot = yield userRef.get();\n    yield put(signInSuccess({\n      id: userSnapshot.id,\n      ...userSnapshot.data()\n    }));\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* signInWithGoogle() {\n  try {\n    const {\n      user\n    } = yield auth.signInWithPopup(googleProvider);\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* isUserAuthenticated() {\n  try {\n    const userAuth = yield getCurrentUser();\n    if (!userAuth) return;\n    yield getSnapshotFromUserAuth(userAuth);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* signOut() {\n  try {\n    yield auth.signOut();\n    yield put(signOutSuccess());\n  } catch (error) {\n    yield put(signOutFailure(error));\n  }\n}\nexport function* signInWithEmail({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    const {\n      user\n    } = yield auth.signInWithEmailAndPassword(email, password);\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* signUp({\n  payload: {\n    email,\n    password,\n    displayName\n  }\n}) {\n  try {\n    const {\n      user\n    } = yield auth.createUserWithEmailAndPassword(email, password);\n    yield put(signUpSuccess({\n      user,\n      additionalData: {\n        displayName\n      }\n    }));\n  } catch (error) {\n    yield put(signUpFailure(error));\n  }\n}\nexport function* signInAfterSignUp({\n  user,\n  additionalData\n}) {\n  yield getSnapshotFromUserAuth(user);\n}\nexport function* onGoogleSignInStart() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\nexport function* onEmailSignInStart() {\n  yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail);\n}\nexport function* onCheckUserSession() {\n  yield takeLatest(UserActionTypes.CHECK_USER_SESSION, isUserAuthenticated);\n}\nexport function* onSignOutStart() {\n  yield takeLatest(UserActionTypes.SIGN_OUT_START, signOut);\n}\nexport function* onSignUpStart() {\n  yield takeLatest(UserActionTypes.SIGN_UP_START, signUp);\n}\nexport function* onSignUpSuccess() {\n  yield takeLatest(UserActionTypes.SIGN_UP_SUCCESS, signInAfterSignUp);\n}\nexport function* userSagas() {\n  yield all([call(onGoogleSignInStart), call(onEmailSignInStart), call(onCheckUserSession), call(onSignOutStart), call(onSignUpStart)]);\n}","map":{"version":3,"sources":["/Users/user/Desktop/workspace/deca-frontend/crown-clothing/src/redux/user/user.sagas.js"],"names":["takeLatest","put","all","call","UserActionTypes","auth","googleProvider","createUserProfileDocument","getCurrentUser","signInSuccess","signInFailure","signOutSuccess","signOutFailure","signUpSuccess","signUpFailure","getSnapshotFromUserAuth","userAuth","addi","userRef","userSnapshot","get","id","data","error","signInWithGoogle","user","signInWithPopup","isUserAuthenticated","signOut","signInWithEmail","payload","email","password","signInWithEmailAndPassword","signUp","displayName","createUserWithEmailAndPassword","additionalData","signInAfterSignUp","onGoogleSignInStart","GOOGLE_SIGN_IN_START","onEmailSignInStart","EMAIL_SIGN_IN_START","onCheckUserSession","CHECK_USER_SESSION","onSignOutStart","SIGN_OUT_START","onSignUpStart","SIGN_UP_START","onSignUpSuccess","SIGN_UP_SUCCESS","userSagas"],"mappings":"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","sourcesContent":["import { takeLatest, put, all, call} from 'redux-saga/effects';\n\nimport UserActionTypes from './user.types';\n\nimport { auth, googleProvider, createUserProfileDocument, getCurrentUser } from '../../firebase/firebase.utils';\nimport {\n    signInSuccess,\n    signInFailure,\n    signOutSuccess,\n    signOutFailure,\n    signUpSuccess,\n    signUpFailure\n\n} from './user.actions';\n\nexport function* getSnapshotFromUserAuth(userAuth, addi) {\n    try {\n        const userRef = yield call(createUserProfileDocument, userAuth);\n        const userSnapshot = yield userRef.get();\n        yield put(\n            signInSuccess({\n                id: userSnapshot.id,\n                ...userSnapshot.data()\n            })\n        );\n    } catch (error) {\n        yield put(signInFailure(error));\n    }\n}\n\n\nexport function* signInWithGoogle() {\n    try {\n        const { user } = yield auth.signInWithPopup(googleProvider);\n        yield getSnapshotFromUserAuth(user);\n    } catch (error) {\n        yield put(signInFailure(error));\n    }\n}\n\nexport function* isUserAuthenticated() {\n    try {\n        const userAuth = yield getCurrentUser();\n        if(!userAuth) return;\n        yield getSnapshotFromUserAuth(userAuth);\n    } catch(error) {\n        yield put(signInFailure(error));\n    }\n}\n\nexport function* signOut() {\n    try{\n       yield auth.signOut();\n       yield put(signOutSuccess())\n    }catch(error) {\n        yield put(signOutFailure(error));\n    }\n}\n\nexport function* signInWithEmail({payload: {email, password}}) {\n    try{\n        const {user} = yield auth.signInWithEmailAndPassword(email, password);\n        yield getSnapshotFromUserAuth(user);\n    } catch (error) {\n        yield put(signInFailure(error));\n    }\n}\n\nexport function* signUp({payload: { email, password, displayName }}) {\n    try {\n        const { user } = yield auth.createUserWithEmailAndPassword(\n            email,\n            password\n          );\n        yield put(signUpSuccess({user, additionalData: { displayName }}));\n    } catch(error) {\n        yield put(signUpFailure(error));\n    }\n}\n\nexport function* signInAfterSignUp({user, additionalData}) {\n    yield getSnapshotFromUserAuth(user);\n}\n\nexport function* onGoogleSignInStart() {\n    yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\n\nexport function* onEmailSignInStart() {\n    yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail);\n}\n\nexport function* onCheckUserSession() {\n    yield takeLatest(UserActionTypes.CHECK_USER_SESSION, isUserAuthenticated);\n}\n\nexport function* onSignOutStart() {\n    yield takeLatest(UserActionTypes.SIGN_OUT_START, signOut);\n}\n\nexport function* onSignUpStart() {\n    yield takeLatest(UserActionTypes.SIGN_UP_START, signUp);\n}\n\nexport function* onSignUpSuccess() {\n    yield takeLatest(UserActionTypes.SIGN_UP_SUCCESS, signInAfterSignUp)\n}\n\nexport function* userSagas() {\n    yield all([\n        call(onGoogleSignInStart),\n        call(onEmailSignInStart),\n        call(onCheckUserSession),\n        call(onSignOutStart),\n        call(onSignUpStart)\n    ]);\n}"]},"metadata":{},"sourceType":"module"}