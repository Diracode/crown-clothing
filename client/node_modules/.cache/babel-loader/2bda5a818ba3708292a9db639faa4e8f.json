{"ast":null,"code":"var _jsxFileName = \"/Users/user/Desktop/workspace/deca-frontend/crown-clothing/src/pages/shop/shop.component.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { fetchCollectionsStartAsync } from '../../redux/shop/shop.actions';\nimport CollectionsOverviewContainer from '../../components/collections-overview/collections-overview.container.component';\nimport CollectionPageContainer from '../collection/collection.container.component';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ShopPage = props => {\n  _s();\n\n  const {\n    match,\n    fetchCollectionsStartAsync\n  } = props;\n  useEffect(() => {\n    fetchCollectionsStartAsync();\n  }, [fetchCollectionsStartAsync]);\n  return (\n    /*#__PURE__*/\n\n    /**\n     * using render in place of component allows us to pass in a function\n     * where the parameters and the function are the parameters the component will\n     * receive\n     */\n    _jsxDEV(\"div\", {\n      className: \"shop-page\",\n      children: [\"/* \", /*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: `${match.path}`,\n        render: props => /*#__PURE__*/_jsxDEV(CollectionsOverviewWithSpinner, {\n          isLoading: isCollectionFetching,\n          ...props\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 71\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 16\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: `${match.path}/:collectionId`,\n        render: props => /*#__PURE__*/_jsxDEV(CollectionPageWithSpinner, {\n          isLoading: !isCollectionsLoaded,\n          ...props\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 76\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 13\n      }, this), \" */\", /*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: `${match.path}`,\n        component: CollectionsOverviewContainer\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: `${match.path}/:collectionId`,\n        component: CollectionPageContainer\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }, this) //<CollectionPageWithSpinner isLoading={!isCollectionsLoaded}: !isCollectionsLoaded is so in order to always set to true since collections will be null upon initial render of the page b4 d useEffect hook is called\n\n  );\n};\n\n_s(ShopPage, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = ShopPage;\n\nconst mapDispatchToProps = dispatch => ({\n  fetchCollectionsStartAsync: () => dispatch(fetchCollectionsStartAsync())\n});\n\nexport default connect(null, mapDispatchToProps)(ShopPage);\n\nvar _c;\n\n$RefreshReg$(_c, \"ShopPage\");","map":{"version":3,"sources":["/Users/user/Desktop/workspace/deca-frontend/crown-clothing/src/pages/shop/shop.component.jsx"],"names":["React","useEffect","Route","connect","fetchCollectionsStartAsync","CollectionsOverviewContainer","CollectionPageContainer","ShopPage","props","match","path","isCollectionFetching","isCollectionsLoaded","mapDispatchToProps","dispatch"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,SAASC,0BAAT,QAA2C,+BAA3C;AAEA,OAAOC,4BAAP,MAAyC,gFAAzC;AACA,OAAOC,uBAAP,MAAoC,8CAApC;;;AAGA,MAAMC,QAAQ,GAAGC,KAAK,IAAI;AAAA;;AACtB,QAAM;AAACC,IAAAA,KAAD;AAAQL,IAAAA;AAAR,MAAsCI,KAA5C;AAEAP,EAAAA,SAAS,CAAC,MAAM;AACZG,IAAAA,0BAA0B;AAC7B,GAFQ,EAEN,CAACA,0BAAD,CAFM,CAAT;AAIA;AAAA;;AACI;AACR;AACA;AACA;AACA;AACQ;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,qCACO,QAAC,KAAD;AAAO,QAAA,KAAK,MAAZ;AAAa,QAAA,IAAI,EAAG,GAAEK,KAAK,CAACC,IAAK,EAAjC;AAAoC,QAAA,MAAM,EAAGF,KAAD,iBAAW,QAAC,8BAAD;AAAgC,UAAA,SAAS,EAAEG,oBAA3C;AAAA,aAAqEH;AAArE;AAAA;AAAA;AAAA;AAAA;AAAvD;AAAA;AAAA;AAAA;AAAA,cADP,eAEI,QAAC,KAAD;AAAO,QAAA,IAAI,EAAG,GAAEC,KAAK,CAACC,IAAK,gBAA3B;AAA4C,QAAA,MAAM,EAAGF,KAAD,iBAAW,QAAC,yBAAD;AAA2B,UAAA,SAAS,EAAE,CAACI,mBAAvC;AAAA,aAAgEJ;AAAhE;AAAA;AAAA;AAAA;AAAA;AAA/D;AAAA;AAAA;AAAA;AAAA,cAFJ,sBAGI,QAAC,KAAD;AAAO,QAAA,KAAK,MAAZ;AAAa,QAAA,IAAI,EAAG,GAAEC,KAAK,CAACC,IAAK,EAAjC;AAAoC,QAAA,SAAS,EAAEL;AAA/C;AAAA;AAAA;AAAA;AAAA,cAHJ,eAII,QAAC,KAAD;AAAO,QAAA,IAAI,EAAG,GAAEI,KAAK,CAACC,IAAK,gBAA3B;AAA4C,QAAA,SAAS,EAAEJ;AAAvD;AAAA;AAAA;AAAA;AAAA,cAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,YANJ,CAYI;;AAZJ;AAaE,CApBN;;GAAMC,Q;;KAAAA,Q;;AAsBN,MAAMM,kBAAkB,GAAGC,QAAQ,KAAK;AACpCV,EAAAA,0BAA0B,EAAE,MAAMU,QAAQ,CAACV,0BAA0B,EAA3B;AADN,CAAL,CAAnC;;AAIA,eAAeD,OAAO,CAAC,IAAD,EAAOU,kBAAP,CAAP,CAAkCN,QAAlC,CAAf","sourcesContent":["import React, { useEffect } from 'react';\nimport { Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nimport { fetchCollectionsStartAsync } from '../../redux/shop/shop.actions';\n\nimport CollectionsOverviewContainer from '../../components/collections-overview/collections-overview.container.component';\nimport CollectionPageContainer from '../collection/collection.container.component';\n\n\nconst ShopPage = props => {\n    const {match, fetchCollectionsStartAsync} = props;\n\n    useEffect(() => {\n        fetchCollectionsStartAsync();\n    }, [fetchCollectionsStartAsync]);\n\n    return (\n        /**\n         * using render in place of component allows us to pass in a function\n         * where the parameters and the function are the parameters the component will\n         * receive\n         */\n        <div className='shop-page'>\n            /* <Route exact path={`${match.path}`} render={(props) => <CollectionsOverviewWithSpinner isLoading={isCollectionFetching} {...props}/>}/>\n            <Route path={`${match.path}/:collectionId`} render={(props) => <CollectionPageWithSpinner isLoading={!isCollectionsLoaded} {...props}/>}/> */\n            <Route exact path={`${match.path}`} component={CollectionsOverviewContainer}/>\n            <Route path={`${match.path}/:collectionId`} component={CollectionPageContainer}/>\n        </div>\n        //<CollectionPageWithSpinner isLoading={!isCollectionsLoaded}: !isCollectionsLoaded is so in order to always set to true since collections will be null upon initial render of the page b4 d useEffect hook is called\n    )};\n\nconst mapDispatchToProps = dispatch => ({\n    fetchCollectionsStartAsync: () => dispatch(fetchCollectionsStartAsync())\n});\n\nexport default connect(null, mapDispatchToProps)(ShopPage);"]},"metadata":{},"sourceType":"module"}