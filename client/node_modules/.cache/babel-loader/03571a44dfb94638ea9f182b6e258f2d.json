{"ast":null,"code":"import { takeLatest, put, all, call } from 'redux-saga/effects';\nimport UserActionTypes from './user.types';\nimport { auth, googleProvider, createUserProfileDocument } from '../../firebase/firebase.utils';\nimport { ignInSuccess, googleSignInFailure } from './user.actions';\nexport function* signInWithGoogle() {\n  try {\n    const {\n      user\n    } = yield auth.signInWithPopup(googleProvider);\n    const userRef = yield call(createUserProfileDocument, user);\n    const userSnapshot = yield userRef.get();\n    yield put(googleSignInSuccess({\n      id: userSnapshot.id,\n      ...userSnapshot.data()\n    }));\n  } catch (error) {\n    yield put(googleSignInFailure(error));\n  }\n}\nexport function* onGoogleSignInStart() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\nexport function* signInWithEmail({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    const {\n      user\n    } = yield auth.signInWithEmailAndPassword(email, password);\n    const userRef = yield call(createUserProfileDocument, user);\n    const userSnapshot = yield userRef.get();\n    yield put(emailSignInSuccess({\n      id: userSnapshot.id,\n      ...userSnapshot.data()\n    }));\n  } catch (error) {\n    yield put(emailSignInFailure(error));\n  }\n}\nexport function* onEmailSignInStart() {\n  yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail);\n}\nexport function* userSagas() {\n  yield all([call(onGoogleSignInStart), call(onEmailSignInStart)]);\n}","map":{"version":3,"sources":["/Users/user/Desktop/workspace/deca-frontend/crown-clothing/src/redux/user/user.sagas.js"],"names":["takeLatest","put","all","call","UserActionTypes","auth","googleProvider","createUserProfileDocument","ignInSuccess","googleSignInFailure","signInWithGoogle","user","signInWithPopup","userRef","userSnapshot","get","googleSignInSuccess","id","data","error","onGoogleSignInStart","GOOGLE_SIGN_IN_START","signInWithEmail","payload","email","password","signInWithEmailAndPassword","emailSignInSuccess","emailSignInFailure","onEmailSignInStart","EMAIL_SIGN_IN_START","userSagas"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,GAArB,EAA0BC,GAA1B,EAA+BC,IAA/B,QAA0C,oBAA1C;AAEA,OAAOC,eAAP,MAA4B,cAA5B;AAEA,SAASC,IAAT,EAAeC,cAAf,EAA+BC,yBAA/B,QAAgE,+BAAhE;AACA,SACIC,YADJ,EAEIC,mBAFJ,QAGO,gBAHP;AAKA,OAAO,UAAUC,gBAAV,GAA6B;AAChC,MAAI;AACA,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAMN,IAAI,CAACO,eAAL,CAAqBN,cAArB,CAAvB;AACA,UAAMO,OAAO,GAAG,MAAMV,IAAI,CAACI,yBAAD,EAA4BI,IAA5B,CAA1B;AACA,UAAMG,YAAY,GAAG,MAAMD,OAAO,CAACE,GAAR,EAA3B;AACA,UAAMd,GAAG,CACLe,mBAAmB,CAAC;AAChBC,MAAAA,EAAE,EAAEH,YAAY,CAACG,EADD;AAEhB,SAAGH,YAAY,CAACI,IAAb;AAFa,KAAD,CADd,CAAT;AAMH,GAVD,CAUE,OAAOC,KAAP,EAAc;AACZ,UAAMlB,GAAG,CAACQ,mBAAmB,CAACU,KAAD,CAApB,CAAT;AACH;AACJ;AAED,OAAO,UAAUC,mBAAV,GAAgC;AACnC,QAAMpB,UAAU,CAACI,eAAe,CAACiB,oBAAjB,EAAuCX,gBAAvC,CAAhB;AACH;AAED,OAAO,UAAUY,eAAV,CAA0B;AAACC,EAAAA,OAAO,EAAE;AAACC,IAAAA,KAAD;AAAQC,IAAAA;AAAR;AAAV,CAA1B,EAAwD;AAC3D,MAAG;AACC,UAAM;AAACd,MAAAA;AAAD,QAAS,MAAMN,IAAI,CAACqB,0BAAL,CAAgCF,KAAhC,EAAuCC,QAAvC,CAArB;AACA,UAAMZ,OAAO,GAAG,MAAMV,IAAI,CAACI,yBAAD,EAA4BI,IAA5B,CAA1B;AACA,UAAMG,YAAY,GAAG,MAAMD,OAAO,CAACE,GAAR,EAA3B;AACA,UAAMd,GAAG,CACL0B,kBAAkB,CAAC;AACfV,MAAAA,EAAE,EAAEH,YAAY,CAACG,EADF;AAEf,SAAGH,YAAY,CAACI,IAAb;AAFY,KAAD,CADb,CAAT;AAMH,GAVD,CAUE,OAAOC,KAAP,EAAc;AACZ,UAAMlB,GAAG,CAAC2B,kBAAkB,CAACT,KAAD,CAAnB,CAAT;AACH;AACJ;AAED,OAAO,UAAUU,kBAAV,GAA+B;AAClC,QAAM7B,UAAU,CAACI,eAAe,CAAC0B,mBAAjB,EAAsCR,eAAtC,CAAhB;AACH;AAED,OAAO,UAAUS,SAAV,GAAsB;AACzB,QAAM7B,GAAG,CAAC,CAACC,IAAI,CAACiB,mBAAD,CAAL,EAA4BjB,IAAI,CAAC0B,kBAAD,CAAhC,CAAD,CAAT;AACH","sourcesContent":["import { takeLatest, put, all, call} from 'redux-saga/effects';\n\nimport UserActionTypes from './user.types';\n\nimport { auth, googleProvider, createUserProfileDocument } from '../../firebase/firebase.utils';\nimport {\n    ignInSuccess,\n    googleSignInFailure\n} from './user.actions';\n\nexport function* signInWithGoogle() {\n    try {\n        const { user } = yield auth.signInWithPopup(googleProvider);\n        const userRef = yield call(createUserProfileDocument, user);\n        const userSnapshot = yield userRef.get();\n        yield put(\n            googleSignInSuccess({\n                id: userSnapshot.id,\n                ...userSnapshot.data()\n            })\n        );\n    } catch (error) {\n        yield put(googleSignInFailure(error));\n    }\n}\n\nexport function* onGoogleSignInStart() {\n    yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle)\n}\n\nexport function* signInWithEmail({payload: {email, password}}) {\n    try{\n        const {user} = yield auth.signInWithEmailAndPassword(email, password);\n        const userRef = yield call(createUserProfileDocument, user);\n        const userSnapshot = yield userRef.get();\n        yield put(\n            emailSignInSuccess({\n                id: userSnapshot.id,\n                ...userSnapshot.data()\n            })\n        );\n    } catch (error) {\n        yield put(emailSignInFailure(error));\n    }\n}\n\nexport function* onEmailSignInStart() {\n    yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail);\n}\n\nexport function* userSagas() {\n    yield all([call(onGoogleSignInStart), call(onEmailSignInStart)]);\n}"]},"metadata":{},"sourceType":"module"}