{"ast":null,"code":"var _jsxFileName = \"/Users/user/Desktop/workspace/deca-frontend/crown-clothing/src/components/with-spinner/with-spinner.component.jsx\";\nimport React from 'react';\nimport { SpinnerContainer, SpinnerOverlay } from './with-spinner.styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst WithSpinner = WrappedComponent => ({\n  isLoading,\n  ...otherProps\n}) => {\n  const Wrapper = Component => ({ ...props\n  }) => {\n    let newProps;\n\n    for (const key in props) {\n      if (typeof props[key] === \"number\") {\n        newProps[key] = props[key] + 1;\n      } else {\n        newProps[key] = props[key];\n      }\n    }\n\n    return /*#__PURE__*/_jsxDEV(Component, { ...newProps\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 20\n    }, this);\n  };\n\n  const Num = ({\n    a,\n    b\n  }) => /*#__PURE__*/_jsxDEV(\"span\", {\n    children: [\"a + b = \", a + b]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 29\n  }, this);\n\n  const WrappedNum = Wrapper();\n  console.log( /*#__PURE__*/_jsxDEV(WrappedNum, {\n    a: 1,\n    b: 2\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 17\n  }, this));\n  return isLoading ? /*#__PURE__*/_jsxDEV(SpinnerOverlay, {\n    children: /*#__PURE__*/_jsxDEV(SpinnerContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this) : /*#__PURE__*/_jsxDEV(WrappedComponent, { ...otherProps\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n};\n\nexport default WithSpinner;","map":{"version":3,"sources":["/Users/user/Desktop/workspace/deca-frontend/crown-clothing/src/components/with-spinner/with-spinner.component.jsx"],"names":["React","SpinnerContainer","SpinnerOverlay","WithSpinner","WrappedComponent","isLoading","otherProps","Wrapper","Component","props","newProps","key","Num","a","b","WrappedNum","console","log"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,gBAAT,EAA2BC,cAA3B,QAAiD,uBAAjD;;;AAEA,MAAMC,WAAW,GAAGC,gBAAgB,IAAI,CAAC;AAACC,EAAAA,SAAD;AAAY,KAAGC;AAAf,CAAD,KAAgC;AACpE,QAAMC,OAAO,GAAGC,SAAS,IAAI,CAAC,EAAC,GAAGC;AAAJ,GAAD,KAAgB;AACrC,QAAIC,QAAJ;;AACA,SAAK,MAAMC,GAAX,IAAkBF,KAAlB,EAAyB;AACrB,UAAI,OAAOA,KAAK,CAACE,GAAD,CAAZ,KAAsB,QAA1B,EAAoC;AAChCD,QAAAA,QAAQ,CAACC,GAAD,CAAR,GAAgBF,KAAK,CAACE,GAAD,CAAL,GAAa,CAA7B;AACH,OAFD,MAEO;AACHD,QAAAA,QAAQ,CAACC,GAAD,CAAR,GAAgBF,KAAK,CAACE,GAAD,CAArB;AACH;AACJ;;AACD,wBAAO,QAAC,SAAD,OAAeD;AAAf;AAAA;AAAA;AAAA;AAAA,YAAP;AACH,GAVL;;AAYA,QAAME,GAAG,GAAG,CAAC;AAACC,IAAAA,CAAD;AAAIC,IAAAA;AAAJ,GAAD,kBAAY;AAAA,2BAAeD,CAAC,GAAGC,CAAnB;AAAA;AAAA;AAAA;AAAA;AAAA,UAAxB;;AACA,QAAMC,UAAU,GAAGR,OAAO,EAA1B;AACAS,EAAAA,OAAO,CAACC,GAAR,eAAY,QAAC,UAAD;AAAY,IAAA,CAAC,EAAE,CAAf;AAAkB,IAAA,CAAC,EAAE;AAArB;AAAA;AAAA;AAAA;AAAA,UAAZ;AACA,SAAOZ,SAAS,gBACZ,QAAC,cAAD;AAAA,2BACI,QAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADY,gBAKZ,QAAC,gBAAD,OAAsBC;AAAtB;AAAA;AAAA;AAAA;AAAA,UALJ;AAOH,CAvBD;;AAyBA,eAAeH,WAAf","sourcesContent":["import React from 'react';\n\nimport { SpinnerContainer, SpinnerOverlay } from './with-spinner.styles';\n\nconst WithSpinner = WrappedComponent => ({isLoading, ...otherProps}) => {\n    const Wrapper = Component => ({...props}) => {\n            let newProps;\n            for (const key in props) {\n                if (typeof props[key] === \"number\") {\n                    newProps[key] = props[key] + 1;\n                } else {\n                    newProps[key] = props[key];\n                }\n            }\n            return <Component {...newProps}/>\n        }\n\n    const Num = ({a, b}) => <span>a + b = {a + b}</span>;\n    const WrappedNum = Wrapper()\n    console.log(<WrappedNum a={1} b={2}/>);\n    return isLoading ? (\n        <SpinnerOverlay>\n            <SpinnerContainer />\n        </SpinnerOverlay>\n    ) : (\n        <WrappedComponent {...otherProps}/> \n    )\n};\n\nexport default WithSpinner;"]},"metadata":{},"sourceType":"module"}