{"ast":null,"code":"var _jsxFileName = \"/Users/user/Desktop/workspace/deca-frontend/crown-clothing/src/components/with-spinner/with-spinner.component.jsx\";\nimport React from 'react';\nimport { SpinnerContainer, SpinnerOverlay } from './with-spinner.styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst WithSpinner = WrappedComponent => ({\n  isLoading,\n  ...otherProps\n}) => {\n  return isLoading ? /*#__PURE__*/_jsxDEV(SpinnerOverlay, {\n    children: /*#__PURE__*/_jsxDEV(SpinnerContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 9\n  }, this) : /*#__PURE__*/_jsxDEV(WrappedComponent, { ...otherProps\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 9\n  }, this);\n}; // export const Wrapper = Component => {\n//     const RC = (props) => {\n//         let newProps = {};\n//         for (const key in props) {\n//             if (typeof props[key] === \"number\") {\n//                 newProps[key] = props[key] + 1;\n//             } else {\n//                 newProps[key] = props[key];\n//             }\n//         }\n//         return <Component {...newProps}/>\n//     }\n//     return RC;\n// }\n\n\nexport const Wrapper = Component => props => {\n  let newProps = {};\n\n  for (const key in props) {\n    if (typeof props[key] === \"number\") {\n      newProps[key] = props[key] + 1;\n    } else {\n      newProps[key] = props[key];\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(Component, { ...newProps\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 12\n  }, this);\n}; // const Num = ({a, b}) => <span style={{backgroundColor: 'red'}}>a + b = {a + b}</span>;\n// const WrappedNum = Wrapper(Num);\n// console.log(<WrappedNum a={1} b={2}/>);\n\nexport default WithSpinner;","map":{"version":3,"sources":["/Users/user/Desktop/workspace/deca-frontend/crown-clothing/src/components/with-spinner/with-spinner.component.jsx"],"names":["React","SpinnerContainer","SpinnerOverlay","WithSpinner","WrappedComponent","isLoading","otherProps","Wrapper","Component","props","newProps","key"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,gBAAT,EAA2BC,cAA3B,QAAiD,uBAAjD;;;AAEA,MAAMC,WAAW,GAAGC,gBAAgB,IAAI,CAAC;AAACC,EAAAA,SAAD;AAAY,KAAGC;AAAf,CAAD,KAAgC;AAEpE,SAAOD,SAAS,gBACZ,QAAC,cAAD;AAAA,2BACI,QAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADY,gBAKZ,QAAC,gBAAD,OAAsBC;AAAtB;AAAA;AAAA;AAAA;AAAA,UALJ;AAOH,CATD,C,CAWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,OAAO,MAAMC,OAAO,GAAGC,SAAS,IAAIC,KAAK,IAAI;AACzC,MAAIC,QAAQ,GAAG,EAAf;;AACA,OAAI,MAAMC,GAAV,IAAiBF,KAAjB,EAAwB;AACpB,QAAG,OAAOA,KAAK,CAACE,GAAD,CAAZ,KAAsB,QAAzB,EAAmC;AAC/BD,MAAAA,QAAQ,CAACC,GAAD,CAAR,GAAgBF,KAAK,CAACE,GAAD,CAAL,GAAa,CAA7B;AACH,KAFD,MAEO;AACHD,MAAAA,QAAQ,CAACC,GAAD,CAAR,GAAgBF,KAAK,CAACE,GAAD,CAArB;AACH;AACJ;;AACD,sBAAO,QAAC,SAAD,OAAeD;AAAf;AAAA;AAAA;AAAA;AAAA,UAAP;AAEH,CAXM,C,CAaP;AACA;AACA;;AAEA,eAAeP,WAAf","sourcesContent":["import React from 'react';\n\nimport { SpinnerContainer, SpinnerOverlay } from './with-spinner.styles';\n\nconst WithSpinner = WrappedComponent => ({isLoading, ...otherProps}) => {\n    \n    return isLoading ? (\n        <SpinnerOverlay>\n            <SpinnerContainer />\n        </SpinnerOverlay>\n    ) : (\n        <WrappedComponent {...otherProps}/> \n    )\n};\n\n// export const Wrapper = Component => {\n//     const RC = (props) => {\n//         let newProps = {};\n//         for (const key in props) {\n//             if (typeof props[key] === \"number\") {\n//                 newProps[key] = props[key] + 1;\n//             } else {\n//                 newProps[key] = props[key];\n//             }\n//         }\n//         return <Component {...newProps}/>\n//     }\n//     return RC;\n// }\n\nexport const Wrapper = Component => props => {\n    let newProps = {};\n    for(const key in props) {\n        if(typeof props[key] === \"number\") {\n            newProps[key] = props[key] + 1;\n        } else {\n            newProps[key] = props[key];\n        }\n    }\n    return <Component {...newProps}/>\n    ;\n}\n\n// const Num = ({a, b}) => <span style={{backgroundColor: 'red'}}>a + b = {a + b}</span>;\n// const WrappedNum = Wrapper(Num);\n// console.log(<WrappedNum a={1} b={2}/>);\n\nexport default WithSpinner;"]},"metadata":{},"sourceType":"module"}