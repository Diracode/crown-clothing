{"ast":null,"code":"var _jsxFileName = \"/Users/user/Desktop/workspace/deca-frontend/crown-clothing/src/pages/shop/shop.component.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { updateCollections } from '../../redux/shop/shop.actions';\nimport WithSpinner from '../../components/with-spinner/with-spinner.component';\nimport CollectionsOverview from '../../components/collections-overview/collections-overview.component';\nimport CollectionPage from '../collection/collection.component';\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CollectionsOverviewWithSpinner = WithSpinner(CollectionsOverview);\n_c = CollectionsOverviewWithSpinner;\n\nconst ShopPage = props => {\n  _s();\n\n  const {\n    match,\n    updateCollections\n  } = props;\n  useEffect(() => {\n    const collectionRef = firestore.collection('collections');\n    const unsubscribeFromSnapshot = collectionRef.onSnapshot(async snapshot => {\n      const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n      updateCollections(collectionsMap);\n    });\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"shop-page\",\n    children: [/*#__PURE__*/_jsxDEV(Route, {\n      path: `${match.path}/:collectionId`,\n      component: CollectionPage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      exact: true,\n      path: `${match.path}`,\n      component: CollectionsOverview\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ShopPage, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c2 = ShopPage;\n\nconst mapDispatchToProps = dispatch => ({\n  updateCollections: collectionsMap => dispatch(updateCollections(collectionsMap))\n});\n\nexport default connect(null, mapDispatchToProps)(ShopPage);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"CollectionsOverviewWithSpinner\");\n$RefreshReg$(_c2, \"ShopPage\");","map":{"version":3,"sources":["/Users/user/Desktop/workspace/deca-frontend/crown-clothing/src/pages/shop/shop.component.jsx"],"names":["React","useEffect","Route","connect","updateCollections","WithSpinner","CollectionsOverview","CollectionPage","firestore","convertCollectionsSnapshotToMap","CollectionsOverviewWithSpinner","ShopPage","props","match","collectionRef","collection","unsubscribeFromSnapshot","onSnapshot","snapshot","collectionsMap","path","mapDispatchToProps","dispatch"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,SAASC,iBAAT,QAAkC,+BAAlC;AAEA,OAAOC,WAAP,MAAwB,sDAAxB;AAEA,OAAOC,mBAAP,MAAgC,sEAAhC;AACA,OAAOC,cAAP,MAA2B,oCAA3B;AAEA,SAASC,SAAT,EAAoBC,+BAApB,QAA2D,+BAA3D;;AAEA,MAAMC,8BAA8B,GAAGL,WAAW,CAACC,mBAAD,CAAlD;KAAMI,8B;;AAEN,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AAAA;;AACxB,QAAM;AAACC,IAAAA,KAAD;AAAQT,IAAAA;AAAR,MAA8BQ,KAApC;AAEAX,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMa,aAAa,GAAGN,SAAS,CAACO,UAAV,CAAqB,aAArB,CAAtB;AACA,UAAMC,uBAAuB,GAAGF,aAAa,CAACG,UAAd,CAAyB,MAAMC,QAAN,IAAiB;AACvE,YAAMC,cAAc,GAAGV,+BAA+B,CAACS,QAAD,CAAtD;AACAd,MAAAA,iBAAiB,CAACe,cAAD,CAAjB;AACF,KAH+B,CAAhC;AAIH,GANQ,CAAT;AAQA,sBACI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,4BACI,QAAC,KAAD;AAAO,MAAA,IAAI,EAAG,GAAEN,KAAK,CAACO,IAAK,gBAA3B;AAA4C,MAAA,SAAS,EAAEb;AAAvD;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAG,GAAEM,KAAK,CAACO,IAAK,EAAjC;AAAoC,MAAA,SAAS,EAAEd;AAA/C;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAKE,CAhBN;;GAAMK,Q;;MAAAA,Q;;AAkBN,MAAMU,kBAAkB,GAAGC,QAAQ,KAAK;AACpClB,EAAAA,iBAAiB,EAAEe,cAAc,IAAIG,QAAQ,CAAClB,iBAAiB,CAACe,cAAD,CAAlB;AADT,CAAL,CAAnC;;AAIA,eAAehB,OAAO,CAAC,IAAD,EAAOkB,kBAAP,CAAP,CAAkCV,QAAlC,CAAf","sourcesContent":["import React, { useEffect } from 'react';\nimport { Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nimport { updateCollections } from '../../redux/shop/shop.actions';\n\nimport WithSpinner from '../../components/with-spinner/with-spinner.component';\n\nimport CollectionsOverview from '../../components/collections-overview/collections-overview.component';\nimport CollectionPage from '../collection/collection.component';\n\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\n\nconst CollectionsOverviewWithSpinner = WithSpinner(CollectionsOverview)\n\nconst ShopPage = (props) => {\n    const {match, updateCollections } = props;\n\n    useEffect(() => {\n        const collectionRef = firestore.collection('collections');\n        const unsubscribeFromSnapshot = collectionRef.onSnapshot(async snapshot =>{\n           const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n           updateCollections(collectionsMap);\n        });\n    });\n\n    return (\n        <div className='shop-page'>\n            <Route path={`${match.path}/:collectionId`} component={CollectionPage}/>\n            <Route exact path={`${match.path}`} component={CollectionsOverview}/>\n        </div>\n    )};\n\nconst mapDispatchToProps = dispatch => ({\n    updateCollections: collectionsMap => dispatch(updateCollections(collectionsMap))\n});\n\nexport default connect(null, mapDispatchToProps)(ShopPage);"]},"metadata":{},"sourceType":"module"}